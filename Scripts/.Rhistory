Inflo_core_file <- paste(InFlo_Home,"InFlo/inFlo")
InFlo_Home = "/Projects/VaradanLab_Repositories/InFlo"
Inflo_core_file <- paste(InFlo_Home,"InFlo/inFlo")
InFlo_core_file <- paste(InFlo_Home,"InFlo/inFlo")
Run_Test <- ifelse(dir.exists(InFlo_Home),TRUE,FALSE)
InFlo_core_file <- paste(InFlo_Home,"InFlo/inFlo")
Run_Test <- ifelse(file.exists(Inflo_core_file),TRUE,FALSE)
InFlo_core_file <- paste(InFlo_Home,"/InFlo/inFlo",sep="")
Run_Test <- ifelse(file.exists(Inflo_core_file),TRUE,FALSE)
Run_Test <- ifelse(file.exists(InFlo_core_file),TRUE,FALSE)
Engine <- paste(InFlo_Home,"/Scripts/Engine.R",sep="")
Engine_Test <- ifelse(file.exists(Engine),TRUE,FALSE)
Pathway_Comps <- paste(InFlo_Home,"/Support_Files/PATHWAYS_COMPONENT_NETWORK.txt",sep="")
Run_Test <- ifelse(file.exists(Pathway_Comps),TRUE,FALSE)
Run_Test <- ifelse(file.exists(Pathway_Interactions),TRUE,FALSE)
Pathway_Interactions <- paste(InFlo_Home,"/Support_Files/PATHWAYS_INTERACTION_NETWORK.txt",sep="")
Run_Test <- ifelse(file.exists(Pathway_Comps),TRUE,FALSE)
Run_Test <- ifelse(file.exists(Pathway_Interactions),TRUE,FALSE)
ana <<- paste(enveHome,"Analysis",sep='/')
ana <<- paste(InFlo_Home,"Analysis",sep='/')
Run_Test <<- ifelse(dir.exists(ana),TRUE,FALSE)
anaPath <<- paste(ana,(paste("Analysis",toString(strftime(Sys.time(),format="%d_%m_%Y_%H_%M")),sep='_')),sep ="/")
Interaction_Dir <- paste(InFlo_Home,"/Support_Files/Interactions/")
Interaction_Dir <- paste(InFlo_Home,"/Support_Files/Interactions/")
Interaction_Files <- list.files(Interaction_Dir)
Interaction_Dir <- paste(InFlo_Home,"/Support_Files/Interactions/",sep="")
Interaction_Files <- list.files(Interaction_Dir)
Run_Test <- ifelse(length(Interaction_Files)>0,TRUE,FALSE)
source("/Projects/VaradanLab_Repositories/InFlo/Run_Conf_FIles/inFlo_RUN_CONF.txt")
anaPath <<- paste(ana,(paste("Analysis",toString(strftime(Sys.time(),format="%d_%m_%Y_%H_%M")),sep='_')),sep ="/")
dir.create(anaPath,showWarnings = T)
anaInput <<- paste(anaPath,"Input",sep='/')
dir.create(anaInput,showWarnings = T)
file.copy(c(CNV_FILE,GE_FILE,METH_FILE),anaInput)
anaTemp <<-paste(anaPath,"temp",sep='/')
dir.create(anaTemp,showWarnings = T)
Pathways <- paste(InFlo_Home,"/pathways.zip",sep="")
file.copy(Pathways,anaTemp)
Pathways <- paste(anaTemp,"/pathways.zip",sep="")
unzip(Pathways)
getwd()
unzip(zipfile = Pathways,exdir = anaTemp)
ResPath <- paste(anaPath,"/Results",sep="")
dir.create(ResPath,showWarnings = T)
GE_FILE
unlist(strsplit(GE_FILE))[[-1]]
unlist(strsplit(GE_FILE))[[4]]
unlist(strsplit(GE_FILE,split = "/"))[[4]]
unlist(strsplit(GE_FILE,split = "/"))[[-1]]
unlist(strsplit(GE_FILE,split = "/"))
unlist(strsplit(GE_FILE,split = "/"))[1]
unlist(strsplit(GE_FILE,split = "/"))[2]
unlist(strsplit(GE_FILE,split = "/"))[-1]
GE_FILE <<- paste(anaInput,unlist(strsplit(GE_FILE,split = "/"))[-1],erp="/")
GE_FILE
GE_FILE <<- paste(anaInput,as.character((unlist(strsplit(GE_FILE,split = "/"))[-1]),erp="/")
)
GE_FILE <<- paste(anaInput,as.character((unlist(strsplit(GE_FILE,split = "/"))[-1]),sep="/")
GE_FILE <<- paste(anaInput,as.character(unlist(strsplit(GE_FILE,split = "/"))[-1]),sep="/")
}
as.character(unlist(strsplit(GE_FILE,split = "/"))[-1])
source("/Projects/VaradanLab_Repositories/InFlo/Run_Conf_FIles/inFlo_RUN_CONF.txt")
GE_FILE <<- paste(anaInput,as.character(unlist(strsplit(GE_FILE,split = "/"))[-1]),sep="/")
GE_FILE
paste(anaInput,as.character(unlist(strsplit(GE_FILE,split = "/"))[[-1]]),sep="/")
source("/Projects/VaradanLab_Repositories/InFlo/Run_Conf_FIles/inFlo_RUN_CONF.txt")
paste(anaInput,as.character(unlist(strsplit(GE_FILE,split = "/"))[[-1]]),sep="/")
as.character(unlist(strsplit(GE_FILE,split = "/"))[[-1]])
as.character(unlist(strsplit(GE_FILE,split = "/"))[-1])
unlist(strsplit(GE_FILE,split = "/"))[-1]
unlist(strsplit(GE_FILE,split = "/"))[-1][-1]
,as.character(unlist(strsplit(GE_FILE,split = "/"))[-1:])
unlist(strsplit(GE_FILE,split = "/"))[-1:])
unlist(strsplit(GE_FILE,split = "/"))[-1:]
unlist(strsplit(GE_FILE,split = "/"))
unlist(strsplit(GE_FILE,split = "/"))[1]
unlist(strsplit(GE_FILE,split = "/"))[2]
unlist(strsplit(GE_FILE,split = "/"))[-1:]
unlist(strsplit(GE_FILE,split = "/"))[-1:]
clasS(unlist(strsplit(GE_FILE,split = "/")))
class(unlist(strsplit(GE_FILE,split = "/")))
apply(unlist(strsplit(GE_FILE,split = "/")),1,class)
as.character(unlist(strsplit(GE_FILE,split = "/"))[-1:]
as.character(unlist(strsplit(GE_FILE,split = "/"))[-1]
)
length(as.character(unlist(strsplit(GE_FILE,split = "/")))
)
as.character(unlist(strsplit(GE_FILE,split = "/"))[length(as.character(unlist(strsplit(GE_FILE,split = "/")))]
length((unlist(strsplit(GE_FILE,split = "/")))
)
as.character(unlist(strsplit(GE_FILE,split = "/")[length(unlist(strsplit(GE_FILE,split = "/")))]
as.character(unlist(strsplit(GE_FILE,split = "/"))[length(unlist(strsplit(GE_FILE,split = "/")))])
as.character(unlist(strsplit(GE_FILE,split = "/"))
)
unlist(strsplit(GE_FILE,split = "/"))[length(unlist(strsplit(GE_FILE,split = "/")))]
as.character(unlist(strsplit(GE_FILE,split = "/"))[length(unlist(strsplit(GE_FILE,split = "/")))])
CNV_FILE
paste(anaInput,as.character(unlist(strsplit(GE_FILE,split = "/"))[length(unlist(strsplit(GE_FILE,split = "/")))]))
PATHWAYS_INTERACTION_NETWORK <- read.table(Pathway_Interactions,header=T,check.names = F,stringsAsFactors = F)
METH_FILE = "/Projects/VaradanLab_Repositories/Extra/TCGA-OV_Methylation27_data.txt"
METH_FILE <<- paste(anaInput,as.character(unlist(strsplit(METH_FILE,split = "/"))[length(unlist(strsplit(GE_FILE,split = "/")))]),sep="/")
METH_FILE
unlist(strsplit(METH_FILE,split = "/")
)
METH_FILE = "/Projects/VaradanLab_Repositories/Extra/TCGA-OV_Methylation27_data.txt"
unlist(strsplit(METH_FILE,split = "/"))
InFlo_core_file
i = 36871
paste(InFlo_core_file,X,"/pid_",i,"_pathway.tab"," -c em_simple.cfg -b ",X,"/pid_",i,"_pathway -r 1 > ",Y,"/samples_",i,"-inconsistentOK-blackballing.txt")
require(doParallel)
PolyP_dir <- "/Projects/MARTINA_VEIGL_POLYP/PolyP_Study3/HSMetrics/"
PolyP_files <- list.files(PolyP_dir,pattern = ".txt")
RES <- NULL
for(i in 1:length(PolyP_files)){
polyp_file <- read.delim(paste(PolyP_dir,PolyP_files[i],sep=""),sep="\t",header = T, check.names = F, stringsAsFactors = F,skip = 6)
polyp_file <- cbind(gsub("_HSM.txt","",PolyP_files[i]),polyp_file)
colnames(polyp_file)[1] <- "ID"
RES <- rbind(RES,polyp_file)
}
View(RES)
write.table(RES,"/Projects/MARTINA_VEIGL_POLYP/PolyP_Study3/Batch3_HSMetrics_Results.txt",sep="\t",row.names = F,col.names = T)
###############################################INFLO-FINAL##################################################
#InFlo is a novel systems biology approach for characterizing the activities of complex signaling networks
#using a unique multidimensional framework integrating transcriptomic, genomic and/or epigenomic profiles
#for any given biological sample.
############################################################################################################
#####Packages_required
rm(list=ls())
require(doParallel)
args = commandArgs(trailingOnly=TRUE)
registerDoParallel(cores=(Sys.getenv("Num_Of_Cores")))
# Inflo Config File, Provide the information about the Gene Expression file , Somatic Copy Number file
InFlo_Home = "/Projects/InFlo"
##Gene Expression Files and Options
PROJ_NAME <<- "KATHERINE_SusScrofa_11.1_Analysis1_Wound_Vs_NonWound"
RNASeqV2 <- TRUE
GE_FILE = "/Projects/Katherine_Garman_SSCrofa_2020_08_19/2020_10_14/InFlo/Analysis1/KATHERINE_SusScrofa_11.1_HUMAN_GENES_FROM_HCOP_COUNTS_FOR_INFLO2020_10_14.txt"
## Somatic Copy Number Files and Options
CNV_FILE <- ""
## ## DNA methylation Data  ( FOR FUTURE)
##METH_FILE = "/PATH-TO-METHYLATION-DATA/Methylation_data.txt"
##### File consisting of information if sample is "Tumor" or "Normal"
SAMPLE_INFORMATION <- "/Projects/Katherine_Garman_SSCrofa_2020_08_19/2020_10_14/InFlo/Analysis1/KATHERINE_SusScrofa_11.1_SAMPLE_INFO_FOR_INFLO_2020_10_14.txt"
PATHWAY_INFORMATION <- "/Projects/InFlo/example_files/TEST_Pathway_Information_FULL.txt"
PATHWAYS_DIR <- "/Projects/InFlo/pathways"
source(paste(InFlo_Home,"/Scripts/Engine.R",sep=""))
Run <- run_chk()
Initial_chk <- File_chk()
Dir_create(Initial_chk)
RUN_PIDS <- PATH_PROCESS(PATHWAY_INFORMATION,PATHWAYS_DIR)
##############################################~~~~Data_Import~##############################################
GE_Data <- Data_Read(GE_FILE)
View(GE_Data)
CNV_Data <- try(Data_Read(CNV_FILE))
if(class(CNV_Data)=="try-error"){
CNV_Data <- NULL
}
Samp_Info <-  read.table(SAMPLE_INFORMATION,header=T,check.names = F,stringsAsFactors = F)
tumor_samples <- Samp_Info[which(Samp_Info[,'Sample_Type']=="Tumor"),"Sample_Name"]
normal_samples <- Samp_Info[which(Samp_Info[,'Sample_Type']=="Normal"),"Sample_Name"]
tumor_samples
############################################################################################
if(RNASeqV2){
GE_WILCOX <<- DeSEQ_TEST(GE_Data)
if(is.null(CNV_Data)){
CNV_WILCOX <<- matrix(1,nrow = length(rownames(GE_WILCOX)),ncol = length(colnames(GE_WILCOX)))
rownames(CNV_WILCOX) <- rownames(GE_WILCOX)
colnames(CNV_WILCOX) <- colnames(GE_WILCOX)
}else{
CNV_WILCOX <<- Wilcox_Test(CNV_Data)
}
}else{
GE_WILCOX <<- Wilcox_Test(GE_Data)
if(is.null(CNV_Data)){
CNV_WILCOX <<- matrix(1,nrow = length(rownames(GE_WILCOX)),ncol = length(colnames(GE_WILCOX)))
rownames(CNV_WILCOX) <- rownames(GE_WILCOX)
colnames(CNV_WILCOX) <- colnames(GE_WILCOX)
}else{
CNV_WILCOX <<- Wilcox_Test(CNV_Data)
}
}
# if(GUASS){
#   GE_WILCOX <- Guass_Fit(GE_Data)
#   CNV_WILCOX <- Guass_Fit(CNV_Data)
# }
PATHWAYS <- paste(anaPath,"/pathways/",sep="")
PRE_INFLO(GE_WILCOX,CNV_WILCOX,PATHWAYS)
